version: '3'

services:
  # zookeeper:
  #   image: zookeeper:3.4.9
  #   ports:
  #     - 2181:2181
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_PORT: 2181
  #     ZOO_SERVERS: server.1=zookeeper:2888:2888

  # kafka:
  #   image: wurstmeister/kafka:2.12-2.4.0
  #   ports:
  #     - 9092:9092
  #   environment:
  #     # KAFKA_ADVERTISED_HOST_NAME: localhost
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: >
  #       post_events:1:1,
  #       book_events:1:1
  #   depends_on:
  #     - zookeeper

  mongo:
    image: mongo:5.0.6
    ports:
      - 27017:27017
    volumes:
      - ./infra/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
     - MONGO_INITDB_DATABASE=graphql
     - MONGO_INITDB_ROOT_USERNAME=admin
     - MONGO_INITDB_ROOT_PASSWORD=password

  redis:
    image: redis:6.2.6
    ports:
      - 6379:6379

  prometheus:
    image: prom/prometheus:v2.33.5
    # ports:
    #   - 9090:9090
    network_mode: host
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - node-exporter

  node-exporter:
    image: prom/node-exporter:v1.3.1
    ports:
      - 9100:9100

  grafana:
    image: grafana/grafana:8.4.3
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/dashboard.json
    volumes:
      - ./infra/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./infra/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./infra/grafana/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
    depends_on:
      - prometheus

  zipkin:
    image: openzipkin/zipkin:2.23
    network_mode: host
    #  ports:
    #    - 9411:9411

  remote:
    build:
      context: .
      dockerfile: ./packages/remote/Dockerfile
    ports:
      - 4001:4001
    depends_on:
      # - kafka
      - redis

  rest:
    build:
      context: .
      dockerfile: ./packages/rest/Dockerfile
    ports:
      - 4002:4002
